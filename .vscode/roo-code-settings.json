{"providerProfiles":{"currentApiConfigName":"a4f o3","apiConfigs":{"default":{"diffEnabled":true,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"apiProvider":"anthropic","id":"xxgmch3x9d"},"gemini google 1206":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"apiModelId":"gemini-exp-1206","geminiApiKey":"AIzaSyCtMXu3tlBuRkmTTl1lDij4rS_P7gJdMc8","apiProvider":"gemini","id":"6fid6tsxjv"},"deepseek v3":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"openAiBaseUrl":"https://api.hyperbolic.xyz/v1","openAiApiKey":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjaGlydTFAdHV0YW1haWwuY29tIiwiaWF0IjoxNzM2OTk5NDU5fQ.OsZWpyS8Ai0OEIcIWkil_aq2Rdjp7XUzHaFkF-EGJW8","openAiModelId":"deepseek-ai/DeepSeek-V3","openAiCustomModelInfo":{"maxTokens":-1,"contextWindow":128000,"supportsImages":true,"supportsPromptCache":false,"inputPrice":0,"outputPrice":0},"apiProvider":"openai","id":"gzccf96ruwj"},"deepseek v2.5":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"openAiBaseUrl":"https://api.hyperbolic.xyz/v1","openAiApiKey":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjaGlydTFAdHV0YW1haWwuY29tIiwiaWF0IjoxNzM2OTk5NDU5fQ.OsZWpyS8Ai0OEIcIWkil_aq2Rdjp7XUzHaFkF-EGJW8","openAiModelId":"deepseek-ai/DeepSeek-V3","apiProvider":"openai","id":"zluc2umcahd"},"google gemini 2":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"apiModelId":"gemini-2.0-flash-exp","geminiApiKey":"AIzaSyCtMXu3tlBuRkmTTl1lDij4rS_P7gJdMc8","apiProvider":"gemini","id":"6f5jv4o7uwn"},"google gemini 1.5":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"apiModelId":"gemini-1.5-pro-002","geminiApiKey":"AIzaSyCtMXu3tlBuRkmTTl1lDij4rS_P7gJdMc8","apiProvider":"gemini","id":"pht9nvedvgk"},"claude 3.5":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"openAiBaseUrl":"https://api.ddc.xiolabs.xyz/v1","openAiApiKey":"Free-For-YT-Subscribers-@DevsDoCode-WatchFullVideo","openAiModelId":"","apiProvider":"openai","id":"632bkuvokme"},"openai gemini":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"openAiBaseUrl":"https://generativelanguage.googleapis.com/v1beta/openai/","openAiApiKey":"AIzaSyCtMXu3tlBuRkmTTl1lDij4rS_P7gJdMc8","openAiModelId":"gemini-2.0-flash-exp","apiProvider":"openai","id":"0zdmmvho4kb"},"claude 3.5 (copy)":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"vsCodeLmModelSelector":{"vendor":"copilot","family":"claude-3.5-sonnet"},"apiProvider":"vscode-lm","id":"szk7xaks5w"},"openai gemini (copy) (copy)":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"openAiBaseUrl":"https://generativelanguage.googleapis.com/v1beta/openai/","openAiApiKey":"AIzaSyCtMXu3tlBuRkmTTl1lDij4rS_P7gJdMc8","openAiModelId":"gemini-2.0-flash-exp","apiProvider":"openai","id":"gqzn387hzlt"},"codestral":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"apiModelId":"gemini-2.0-flash-exp","mistralApiKey":"ikfZ08MCE08oS2mWsFdKfHGlvRsX22XD","apiProvider":"mistral","id":"1n148tnckb7"},"claude copilot":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"vsCodeLmModelSelector":{"vendor":"copilot","family":"claude-3.5-sonnet"},"apiProvider":"vscode-lm","id":"5g3zi99dbh4"},"openrouter r1":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"reasoningEffort":"high","openRouterApiKey":"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","openRouterModelId":"deepseek/deepseek-r1-0528:free","openRouterBaseUrl":"","openRouterSpecificProvider":"Targon","openRouterUseMiddleOutTransform":true,"apiProvider":"openrouter","id":"7rqks0wl78t"},"deepseek r1":{"diffEnabled":false,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"enableReasoningEffort":true,"openAiBaseUrl":"https://api.hyperbolic.xyz/v1","openAiApiKey":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjaGlydTFAdHV0YW1haWwuY29tIiwiaWF0IjoxNzM2OTk5NDU5fQ.OsZWpyS8Ai0OEIcIWkil_aq2Rdjp7XUzHaFkF-EGJW8","openAiR1FormatEnabled":true,"openAiModelId":"deepseek-ai/DeepSeek-R1","openAiCustomModelInfo":{"maxTokens":-1,"contextWindow":128000,"supportsImages":false,"supportsPromptCache":false,"inputPrice":0,"outputPrice":0,"reasoningEffort":"high"},"openAiHeaders":{},"apiProvider":"openai","id":"nexhi2h5j4"},"a4f o3":{"diffEnabled":true,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"enableReasoningEffort":true,"openAiBaseUrl":"https://api.a4f.co/v1","openAiApiKey":"ddc-a4f-e311604a33614d2b999a718ffde6de54","openAiModelId":"provider-6/o3-high","openAiCustomModelInfo":{"maxTokens":-1,"contextWindow":10000000,"supportsImages":true,"supportsComputerUse":true,"supportsPromptCache":true,"inputPrice":0,"outputPrice":0,"reasoningEffort":"high"},"openAiHeaders":{},"apiProvider":"openai","id":"srjla26kik"},"gemini 2.5 a4f":{"diffEnabled":true,"fuzzyMatchThreshold":1,"rateLimitSeconds":0,"enableReasoningEffort":true,"openAiBaseUrl":"https://api.a4f.co/v1","openAiApiKey":"ddc-a4f-e311604a33614d2b999a718ffde6de54","openAiModelId":"provider-6/gemini-2.5-flash","openAiCustomModelInfo":{"maxTokens":-1,"contextWindow":1000000,"supportsImages":true,"supportsComputerUse":true,"supportsPromptCache":true,"inputPrice":0,"outputPrice":0,"reasoningEffort":"medium"},"openAiHeaders":{},"apiProvider":"openai","id":"y6as4af4uhq"}},"modeApiConfigs":{"architect":"srjla26kik","code":"y6as4af4uhq","ask":"7rqks0wl78t","debug":"srjla26kik","orchestrator":"5g3zi99dbh4","project-research":"5g3zi99dbh4"},"migrations":{"rateLimitSecondsMigrated":true,"diffSettingsMigrated":true,"openAiHeadersMigrated":true}},"globalSettings":{"pinnedApiConfigs":{},"lastShownAnnouncementId":"jul-02-2025-3-22-6","customInstructions":"ANALYSIS & CONTEXT:\nThoroughly analyze all files in the current workspace's main directory and all subdirectories. For each file, review its contents, dependencies, and relationships to build a complete, contextual understanding of the codebase architecture, patterns, and conventions.\n\nMCP UTILIZATION:\nAt every step, strategically use appropriate MCPs:\n- context7: Deep contextual analysis and cross-file relationships\n- filesystem: File operations, directory traversal, and file management\n- sequentialthinking: Complex planning, decision trees, and step-by-step reasoning\n- puppeteer: UI automation and testing\n- memory: Progress tracking, state management, and context preservation\n- tavily: External knowledge, documentation lookup, and best practices\n- browserbase: Browser automation and web data extraction\n\nTASK EXECUTION FRAMEWORK:\n1. **Context Check**: Always query memory MCP first for relevant prior context, patterns, or similar tasks\n2. **Analysis**: Evaluate requested tasks against codebase architecture and constraints\n3. **Planning**: Use sequentialthinking MCP to decompose tasks into logical, sequential steps with risk assessment\n4. **Execution**: Implement changes incrementally with immediate validation\n5. **Verification**: Lint, test, and verify each modification before proceeding\n6. **Documentation**: Update memory with insights, decisions, and outcomes\n\nQUALITY ASSURANCE:\n- After every code modification, immediately lint and recheck affected files\n- Run relevant tests if test suite exists\n- Verify changes don't break existing functionality\n- Ensure adherence to project's coding standards and patterns\n\nMEMORY MANAGEMENT:\n- Before significant actions: Check memory for context, patterns, and lessons learned\n- After each action: Record new information, decisions, and their rationale\n- Maintain searchable log of progress, blockers, and solutions\n- Update memory with any discovered codebase patterns or architectural insights\n\nERROR HANDLING & RECOVERY:\n- If uncertain about MCP selection, use sequentialthinking to evaluate options\n- When errors occur, document in memory and adjust approach\n- Always explain reasoning for tool/approach selection\n\nCOMMUNICATION:\n- Provide clear, stepwise progress updates\n- Explain architectural decisions and their impact\n- Flag potential risks or breaking changes before implementation\n- Ask for clarification when requirements are ambiguous","condensingApiConfigId":"","customCondensingPrompt":"","autoApprovalEnabled":true,"alwaysAllowReadOnly":true,"alwaysAllowReadOnlyOutsideWorkspace":true,"alwaysAllowWrite":true,"alwaysAllowWriteOutsideWorkspace":true,"alwaysAllowWriteProtected":true,"writeDelayMs":1000,"alwaysAllowBrowser":true,"alwaysApproveResubmit":true,"requestDelaySeconds":7,"alwaysAllowMcp":true,"alwaysAllowModeSwitch":false,"alwaysAllowSubtasks":true,"alwaysAllowExecute":true,"alwaysAllowFollowupQuestions":false,"followupAutoApproveTimeoutMs":60000,"allowedCommands":["npm test","npm install","tsc","git log","git diff","git show","gradlew.bat build","gradlew.bat :desktop:run","cd Suwayomi-WebUI && yarn install","cd Suwayomi-Server && gradlew.bat assemble","gradlew build"],"autoCondenseContext":true,"autoCondenseContextPercent":100,"maxConcurrentFileReads":5,"browserToolEnabled":false,"browserViewportSize":"1280x800","screenshotQuality":75,"remoteBrowserEnabled":true,"enableCheckpoints":true,"ttsEnabled":false,"ttsSpeed":1,"soundEnabled":true,"soundVolume":0.5,"maxOpenTabsContext":32,"maxWorkspaceFiles":500,"showRooIgnoredFiles":true,"maxReadFileLine":-1,"terminalOutputLineLimit":100,"terminalShellIntegrationTimeout":5000,"terminalShellIntegrationDisabled":true,"terminalCommandDelay":0,"terminalPowershellCounter":false,"terminalZshClearEolMark":true,"terminalZshOhMy":false,"terminalZshP10k":false,"terminalZdotdir":false,"terminalCompressProgressBar":true,"rateLimitSeconds":0,"diffEnabled":true,"fuzzyMatchThreshold":1,"experiments":{"powerSteering":false,"multiFileApplyDiff":false},"codebaseIndexModels":{"openai":{"text-embedding-3-small":{"dimension":1536},"text-embedding-3-large":{"dimension":3072},"text-embedding-ada-002":{"dimension":1536}},"ollama":{"nomic-embed-text":{"dimension":768},"nomic-embed-code":{"dimension":3584},"mxbai-embed-large":{"dimension":1024},"all-minilm":{"dimension":384}},"openai-compatible":{"text-embedding-3-small":{"dimension":1536},"text-embedding-3-large":{"dimension":3072},"text-embedding-ada-002":{"dimension":1536},"nomic-embed-code":{"dimension":3584}}},"codebaseIndexConfig":{"codebaseIndexEnabled":false,"codebaseIndexQdrantUrl":"http://localhost:6333","codebaseIndexEmbedderProvider":"openai","codebaseIndexEmbedderBaseUrl":"","codebaseIndexEmbedderModelId":""},"language":"en","telemetrySetting":"enabled","mcpEnabled":true,"enableMcpServerCreation":true,"mode":"architect","customModes":[{"slug":"project-research","name":"🔍 Project Research","roleDefinition":"You are a detailed-oriented research assistant specializing in examining and understanding codebases. Your primary responsibility is to analyze the file structure, content, and dependencies of a given project to provide comprehensive context relevant to specific user queries.\n","whenToUse":"Use this mode when you need to thoroughly investigate and understand a codebase structure, analyze project architecture, or gather comprehensive context about existing implementations. Ideal for onboarding to new projects, understanding complex codebases, or researching how specific features are implemented across the project.\n","description":"Investigate and analyze codebase structure","customInstructions":"Your role is to deeply investigate and summarize the structure and implementation details of the project codebase. To achieve this effectively, you must:\n\n1. Start by carefully examining the file structure of the entire project, with a particular emphasis on files located within the \"docs\" folder. These files typically contain crucial context, architectural explanations, and usage guidelines.\n\n2. When given a specific query, systematically identify and gather all relevant context from:\n   - Documentation files in the \"docs\" folder that provide background information, specifications, or architectural insights.\n   - Relevant type definitions and interfaces, explicitly citing their exact location (file path and line number) within the source code.\n   - Implementations directly related to the query, clearly noting their file locations and providing concise yet comprehensive summaries of how they function.\n   - Important dependencies, libraries, or modules involved in the implementation, including their usage context and significance to the query.\n\n3. Deliver a structured, detailed report that clearly outlines:\n   - An overview of relevant documentation insights.\n   - Specific type definitions and their exact locations.\n   - Relevant implementations, including file paths, functions or methods involved, and a brief explanation of their roles.\n   - Critical dependencies and their roles in relation to the query.\n\n4. Always cite precise file paths, function names, and line numbers to enhance clarity and ease of navigation.\n\n5. Organize your findings in logical sections, making it straightforward for the user to understand the project's structure and implementation status relevant to their request.\n\n6. Ensure your response directly addresses the user's query and helps them fully grasp the relevant aspects of the project's current state.\n\nThese specific instructions supersede any conflicting general instructions you might otherwise follow. Your detailed report should enable effective decision-making and next steps within the overall workflow.\n","groups":["read"],"source":"global"}],"customSupportPrompts":{},"profileThresholds":{},"hasOpenedModeSelector":true}}